#include <iostream>
#include <string>
#include <cmath>
#include "Extentionn.hpp"

using namespace std;
using namespace ext;

struct Point
{
	float x;
	float y;
};
struct Circle
{
	int r;
	Point md;
};
int main()
{
	/*
	Задание №1
	Создать структуру Point, содержащую два поля x, y типа float.
	Создать и проинициализировать переменную типа Point.
	Создать переменную типа Point и проинициализировать ее данными с клавиатуры.
	Вывести на экран значения x, y вышеобъявленных переменных.
	Написать программу, которая определеяет принадлежит ли заданная точка кругу заданного радиуса.
	Координаты точки и радиус пользователь вводит с клавиатуры.
	Для хранения координат точки использовать структуру Point.
	Написать программу, которая по двум заданным точкам - концам отрезка находит точку середины отрезка.
	Координаты точек пользователь вводит с клавиатуры.
	Для хранения координат точек использовать структуру Point.
	Рассчитанную точку середины отрезка также хранить как структуру Point.
	Вывести координаты полученной точки в консоль.
	*/
	Point a = { 32.3,16 };
	Point kb;
	cout << "X & Y" << endl;
	cin >> kb.x >> kb.y;
	cout << kb.x << " " << kb.y << endl;
	Point okr;
	cout << "X & Y" << endl;
	cin >> okr.x >> okr.y;
	float r;
	cout << "R" << endl;
	cin >> r;
	if (okr.x * okr.y + okr.y * okr.y <= r * r)
	{
		cout << "Yes" << endl;
	}
	else
	{
		cout << "No" << endl;
	}
	Point p1, p2;
	cout << "X & Y of p1" << endl;
	cin >> p1.x >> p1.y;
	cout << "X & Y of p2" << endl;
	cin >> p2.x >> p2.y;
	Point mp;
	mp.x = (p1.x + p2.x) / 2;
	mp.y = (p1.y + p2.y) / 2;
	cout << "Middle point: ( " << mp.x << " ; " << mp.y << " )" << endl;
	/*
	Задание №2
	Создать структуру Circle, содержащую одно поле типа int - радиус и второе поле типа Point - центр окружности.
	Создать и проинициализировать переменную типа Circle.
	Создать переменную типа Circle и проинициализировать ее данными введенными с клавиатуры.
	Вывести на экран данные, сохраненные в вышеобъявленных переменных.
	Даны две переменные типа Circle.
	Написать программу, которая определяет пересекаются ли окружности,
	описанные данными переменными.
	*/
	Circle kg = { 2, {0,0} };
	Circle sokr;
	cin >> sokr.r >> sokr.md.x >> sokr.md.y;
	cout << "first circle" << kg.r << "( " << kg.md.x << " ; " << kg.md.y << " )" << endl;
	cout << "second circle" << sokr.r << "( " << sokr.md.x << " ; " << sokr.md.y << " )" << endl;
	bool pr = 0;
	double rst;
	rst = sqrt(pow((kg.md.x - sokr.md.x), 2) + pow((kg.md.y - sokr.md.y), 2);
	if (kg.md.x == sokr.md.x and kg.md.y == sokr.md.y)
	{
		if (kg.r = !sokr.r)
		{
			pr = 0;
		}
	}
	else
	{
		if (rst = sokr.r + kg.r)
		{
			pr = 1;
		}
		else if (rst > sokr.r + kg.r)
		{
			pr = 0;
		}
		else if (rst < sokr.r or rst < kg.r)
		{
			if ((rst + kg.r < sokr.r and kg.r < sokr.r) or (rst + sokr.r< kg.r and kg.r > sokr.r))
			{
				pr = 0;
			}
			else
			{
				pr = 1;
			}
		}
	}
	/*
	Задание №4
	Создать массив из 20 элеметнов типа Point.
	Проинициализировать его точками со случайными значениями координат в пределах от 0 до 100.
	Выведите на экран координаты:
	- точки с наименьшей x координатой
	- двух точек, расстояние между которыми минимально.
	*/
	int i, j;
	float minp, l;
	float minr = 100;
	Point mas[20];
	for (i = 0; i < 100; ++i)
	{
		mas[i].x = GetRandomValue(0, 100);
		mas[i].y = GetRandomValue(0, 100);
	}
	minp = mas[0].x;
	for (i = 0; i < 100; ++i)
	{
		if (mas[i].x < minp)
		{
			minp = mas[i].x;
		}
		for (j = i + 1; j < 100; ++i)
		{
			l = sqrt(pow(mas[i].x - mas[j].y, 2) + pow(mas[i].y - mas[j].y, 2));
			if (l < minr)
			{
				minr = l;
			}
		}
	}
}
